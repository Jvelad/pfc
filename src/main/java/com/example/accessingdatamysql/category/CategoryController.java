package com.example.accessingdatamysql.category;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/category") // This means URL's start with /demo (after Application path)
public class CategoryController {

  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private CategoryRepository categoryRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewCategory(
		  @RequestParam int id,
		  @RequestParam String name,
		  @RequestParam String type
		  ) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Category c = new Category();
    c.setId(id);
    c.setName(name);
    c.setType(type);
    categoryRepository.save(c);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Category> getAllCategories() {
    // This returns a JSON or XML with the users
    return categoryRepository.findAll();
  }
  
}